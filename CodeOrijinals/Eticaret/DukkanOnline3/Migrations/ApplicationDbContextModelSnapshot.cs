// <auto-generated />
using System;
using DukkanOnline3.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DukkanOnline3.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("DukkanOnline3.Models.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("OwnerID");

                    b.Property<int>("PhoneNumber");

                    b.Property<string>("State");

                    b.Property<int>("Status");

                    b.Property<string>("Town");

                    b.Property<string>("Zip");

                    b.HasKey("ContactId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("DukkanOnline3.Models.Iyelik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("MyUserID");

                    b.Property<string>("Name");

                    b.Property<int>("UrunID");

                    b.HasKey("Id");

                    b.HasIndex("MyUserID");

                    b.HasIndex("UrunID");

                    b.ToTable("Iyeliks");
                });

            modelBuilder.Entity("DukkanOnline3.Models.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Kategoris");
                });

            modelBuilder.Entity("DukkanOnline3.Models.MyRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("DukkanOnline3.Models.MyRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("DukkanOnline3.Models.MyUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("MyUser");
                });

            modelBuilder.Entity("DukkanOnline3.Models.MyUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("DukkanOnline3.Models.MyUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("DukkanOnline3.Models.MyUserRole", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("DukkanOnline3.Models.MyUserToken", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("DukkanOnline3.Models.Urun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int>("KategoriId");

                    b.Property<string>("LongDescription");

                    b.Property<decimal>("Maliyeti");

                    b.Property<string>("Name");

                    b.Property<string>("Resim");

                    b.Property<string>("ShortDescription");

                    b.Property<int>("Stok");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.ToTable("Uruns");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Urun");
                });

            modelBuilder.Entity("DukkanOnline3.Models.Yorum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("KategoriId");

                    b.Property<int>("Puan");

                    b.Property<int>("UrunId");

                    b.Property<string>("YorumMetni")
                        .HasMaxLength(600);

                    b.Property<string>("YorumcuId");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.HasIndex("UrunId");

                    b.HasIndex("YorumcuId");

                    b.ToTable("Yorums");
                });

            modelBuilder.Entity("DukkanOnline3.Models.Uretici", b =>
                {
                    b.HasBaseType("DukkanOnline3.Models.MyUser");

                    b.HasDiscriminator().HasValue("Uretici");
                });

            modelBuilder.Entity("DukkanOnline3.Models.Mamul", b =>
                {
                    b.HasBaseType("DukkanOnline3.Models.Urun");

                    b.Property<string>("UreticiId");

                    b.HasIndex("UreticiId");

                    b.HasDiscriminator().HasValue("Mamul");
                });

            modelBuilder.Entity("DukkanOnline3.Models.Toptanci", b =>
                {
                    b.HasBaseType("DukkanOnline3.Models.Uretici");

                    b.HasDiscriminator().HasValue("Toptanci");
                });

            modelBuilder.Entity("DukkanOnline3.Models.Toptan", b =>
                {
                    b.HasBaseType("DukkanOnline3.Models.Mamul");

                    b.Property<string>("ToptanciId");

                    b.HasIndex("ToptanciId");

                    b.HasDiscriminator().HasValue("Toptan");
                });

            modelBuilder.Entity("DukkanOnline3.Models.Perakendeci", b =>
                {
                    b.HasBaseType("DukkanOnline3.Models.Toptanci");

                    b.HasDiscriminator().HasValue("Perakendeci");
                });

            modelBuilder.Entity("DukkanOnline3.Models.Perakende", b =>
                {
                    b.HasBaseType("DukkanOnline3.Models.Toptan");

                    b.Property<string>("PerakendeciId");

                    b.HasIndex("PerakendeciId");

                    b.HasDiscriminator().HasValue("Perakende");
                });

            modelBuilder.Entity("DukkanOnline3.Models.Alici", b =>
                {
                    b.HasBaseType("DukkanOnline3.Models.Perakendeci");

                    b.HasDiscriminator().HasValue("Alici");
                });

            modelBuilder.Entity("DukkanOnline3.Models.Satici", b =>
                {
                    b.HasBaseType("DukkanOnline3.Models.Perakendeci");

                    b.HasDiscriminator().HasValue("Satici");
                });

            modelBuilder.Entity("DukkanOnline3.Models.Siparis", b =>
                {
                    b.HasBaseType("DukkanOnline3.Models.Perakende");

                    b.Property<string>("AliciId");

                    b.HasIndex("AliciId");

                    b.HasDiscriminator().HasValue("Siparis");
                });

            modelBuilder.Entity("DukkanOnline3.Models.Alim", b =>
                {
                    b.HasBaseType("DukkanOnline3.Models.Siparis");

                    b.Property<string>("AliciId1");

                    b.HasIndex("AliciId1");

                    b.HasDiscriminator().HasValue("Alim");
                });

            modelBuilder.Entity("DukkanOnline3.Models.Satim", b =>
                {
                    b.HasBaseType("DukkanOnline3.Models.Siparis");

                    b.Property<string>("SaticiId");

                    b.HasIndex("SaticiId");

                    b.HasDiscriminator().HasValue("Satim");
                });

            modelBuilder.Entity("DukkanOnline3.Models.Iyelik", b =>
                {
                    b.HasOne("DukkanOnline3.Models.MyUser", "MyUsers")
                        .WithMany("Iyelikleri")
                        .HasForeignKey("MyUserID");

                    b.HasOne("DukkanOnline3.Models.Urun", "Urun")
                        .WithMany("Iyelikleri")
                        .HasForeignKey("UrunID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DukkanOnline3.Models.MyRoleClaim", b =>
                {
                    b.HasOne("DukkanOnline3.Models.MyRole", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DukkanOnline3.Models.MyUserClaim", b =>
                {
                    b.HasOne("DukkanOnline3.Models.MyUser", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DukkanOnline3.Models.MyUserLogin", b =>
                {
                    b.HasOne("DukkanOnline3.Models.MyUser", "User")
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DukkanOnline3.Models.MyUserRole", b =>
                {
                    b.HasOne("DukkanOnline3.Models.MyRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DukkanOnline3.Models.MyUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DukkanOnline3.Models.MyUserToken", b =>
                {
                    b.HasOne("DukkanOnline3.Models.MyUser", "User")
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DukkanOnline3.Models.Urun", b =>
                {
                    b.HasOne("DukkanOnline3.Models.Kategori", "Kategori")
                        .WithMany("Uruns")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DukkanOnline3.Models.Yorum", b =>
                {
                    b.HasOne("DukkanOnline3.Models.Kategori", "Kategori")
                        .WithMany()
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DukkanOnline3.Models.Urun", "MyUrun")
                        .WithMany("Yorumlari")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DukkanOnline3.Models.MyUser", "Yorumcu")
                        .WithMany("Yorumlar")
                        .HasForeignKey("YorumcuId");
                });

            modelBuilder.Entity("DukkanOnline3.Models.Mamul", b =>
                {
                    b.HasOne("DukkanOnline3.Models.Uretici")
                        .WithMany("Mamulleri")
                        .HasForeignKey("UreticiId");
                });

            modelBuilder.Entity("DukkanOnline3.Models.Toptan", b =>
                {
                    b.HasOne("DukkanOnline3.Models.Toptanci")
                        .WithMany("Toptanlari")
                        .HasForeignKey("ToptanciId");
                });

            modelBuilder.Entity("DukkanOnline3.Models.Perakende", b =>
                {
                    b.HasOne("DukkanOnline3.Models.Perakendeci")
                        .WithMany("Perakendeleri")
                        .HasForeignKey("PerakendeciId");
                });

            modelBuilder.Entity("DukkanOnline3.Models.Siparis", b =>
                {
                    b.HasOne("DukkanOnline3.Models.Alici")
                        .WithMany("Siparisleri")
                        .HasForeignKey("AliciId");
                });

            modelBuilder.Entity("DukkanOnline3.Models.Alim", b =>
                {
                    b.HasOne("DukkanOnline3.Models.Alici")
                        .WithMany("Alimlari")
                        .HasForeignKey("AliciId1");
                });

            modelBuilder.Entity("DukkanOnline3.Models.Satim", b =>
                {
                    b.HasOne("DukkanOnline3.Models.Satici")
                        .WithMany("Satimlari")
                        .HasForeignKey("SaticiId");
                });
#pragma warning restore 612, 618
        }
    }
}
