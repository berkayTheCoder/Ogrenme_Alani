@model PaginatedList<BerkayMarket.Models.Urun>

@{
    ViewData["Title"] = "Index";
}

<h1>IndexVitrin</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Adi</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["StokSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Stok</a>
            </th>
            <th>
                Kategori @*@Html.DisplayNameFor(model => model.Kategori)*@
            </th>
            <th>
                Resim @*@Html.DisplayNameFor(model => model.Resim)*@
            </th>
            <th>
                Açıklama
            </th>
            <th>
                Sahibi @*@Html.DisplayNameFor(model => model.BmUser)*@
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Adi)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Stok)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Kategori.Adi)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Resim)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Aciklama)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BmUser.UserName)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>