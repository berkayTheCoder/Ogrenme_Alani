// <auto-generated />
using System;
using KendiDukkanim.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KendiDukkanim.Migrations
{
    [DbContext(typeof(KendiDukkanimContext))]
    [Migration("20190605174458_SilBastan")]
    partial class SilBastan
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("KendiDukkanim.Models.Dukkan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Adi");

                    b.Property<int>("SaticiId");

                    b.Property<string>("Yerleske")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("SaticiId")
                        .IsUnique();

                    b.ToTable("Dukkan");
                });

            modelBuilder.Entity("KendiDukkanim.Models.Kategori", b =>
                {
                    b.Property<int>("KategoriID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Adi")
                        .HasMaxLength(50);

                    b.Property<decimal>("Budget")
                        .HasColumnType("money");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTime>("StartDate");

                    b.HasKey("KategoriID");

                    b.ToTable("Kategori");
                });

            modelBuilder.Entity("KendiDukkanim.Models.Musteri", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstMidName")
                        .IsRequired()
                        .HasColumnName("FirstName")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("SiparisDate");

                    b.HasKey("ID");

                    b.ToTable("Musteri");
                });

            modelBuilder.Entity("KendiDukkanim.Models.Satici", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstMidName")
                        .IsRequired()
                        .HasColumnName("FirstName")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("UrunID");

                    b.HasKey("ID");

                    b.HasIndex("UrunID");

                    b.ToTable("Satici");
                });

            modelBuilder.Entity("KendiDukkanim.Models.Satici1", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DukkanlariId");

                    b.Property<string>("FirstMidName")
                        .IsRequired()
                        .HasColumnName("FirstName")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("DukkanlariId");

                    b.ToTable("Satici1");
                });

            modelBuilder.Entity("KendiDukkanim.Models.Satis", b =>
                {
                    b.Property<int>("SatisId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Satici1ID");

                    b.Property<int>("SaticiID");

                    b.Property<DateTime>("SatisZamani");

                    b.Property<int>("UrunID");

                    b.HasKey("SatisId");

                    b.HasIndex("Satici1ID");

                    b.HasIndex("SaticiID");

                    b.HasIndex("UrunID");

                    b.ToTable("Satis");
                });

            modelBuilder.Entity("KendiDukkanim.Models.Siparis", b =>
                {
                    b.Property<int>("SiparisID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MusteriID");

                    b.Property<int>("UrunID");

                    b.HasKey("SiparisID");

                    b.HasIndex("MusteriID");

                    b.HasIndex("UrunID");

                    b.ToTable("Siparis");
                });

            modelBuilder.Entity("KendiDukkanim.Models.Urun", b =>
                {
                    b.Property<int>("UrunID");

                    b.Property<string>("Adi");

                    b.Property<int>("KategoriID");

                    b.Property<string>("KisaAciklama");

                    b.Property<int>("Puani");

                    b.Property<int>("Stok");

                    b.Property<string>("Title")
                        .HasMaxLength(50);

                    b.Property<string>("UzunAciklama");

                    b.HasKey("UrunID");

                    b.HasIndex("KategoriID");

                    b.ToTable("Urun");
                });

            modelBuilder.Entity("KendiDukkanim.Models.Dukkan", b =>
                {
                    b.HasOne("KendiDukkanim.Models.Satici", "Satici")
                        .WithOne("Dukkan")
                        .HasForeignKey("KendiDukkanim.Models.Dukkan", "SaticiId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KendiDukkanim.Models.Satici", b =>
                {
                    b.HasOne("KendiDukkanim.Models.Urun")
                        .WithMany("UrunSaticilari")
                        .HasForeignKey("UrunID");
                });

            modelBuilder.Entity("KendiDukkanim.Models.Satici1", b =>
                {
                    b.HasOne("KendiDukkanim.Models.Dukkan", "Dukkanlari")
                        .WithMany()
                        .HasForeignKey("DukkanlariId");
                });

            modelBuilder.Entity("KendiDukkanim.Models.Satis", b =>
                {
                    b.HasOne("KendiDukkanim.Models.Satici1")
                        .WithMany("Satislari")
                        .HasForeignKey("Satici1ID");

                    b.HasOne("KendiDukkanim.Models.Satici", "Satici")
                        .WithMany("SatisLari")
                        .HasForeignKey("SaticiID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KendiDukkanim.Models.Urun", "Urun")
                        .WithMany("Satislari")
                        .HasForeignKey("UrunID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KendiDukkanim.Models.Siparis", b =>
                {
                    b.HasOne("KendiDukkanim.Models.Musteri", "Musteri")
                        .WithMany("Siparisler")
                        .HasForeignKey("MusteriID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KendiDukkanim.Models.Urun", "Urun")
                        .WithMany("Siparisleri")
                        .HasForeignKey("UrunID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KendiDukkanim.Models.Urun", b =>
                {
                    b.HasOne("KendiDukkanim.Models.Kategori", "Kategorisi")
                        .WithMany("Uruns")
                        .HasForeignKey("KategoriID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
