// <auto-generated />
using System;
using DukkanOnline.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DukkanOnline.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("DukkanOnline.Models.AltKategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("AltKategori");
                });

            modelBuilder.Entity("DukkanOnline.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ApplicationUser");
                });

            modelBuilder.Entity("DukkanOnline.Models.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("OwnerID");

                    b.Property<int>("PhoneNumber");

                    b.Property<string>("State");

                    b.Property<int>("Status");

                    b.Property<string>("Town");

                    b.Property<string>("Zip");

                    b.HasKey("ContactId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("DukkanOnline.Models.Envanter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AliciId");

                    b.Property<string>("BakiciId");

                    b.Property<string>("SaticiId");

                    b.Property<string>("UrunId");

                    b.Property<int?>("UrunId1");

                    b.Property<string>("YorumcuId");

                    b.HasKey("Id");

                    b.HasIndex("AliciId");

                    b.HasIndex("BakiciId");

                    b.HasIndex("SaticiId");

                    b.HasIndex("UrunId1");

                    b.HasIndex("YorumcuId");

                    b.ToTable("Envanter");
                });

            modelBuilder.Entity("DukkanOnline.Models.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AltKategoriId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("AltKategoriId");

                    b.ToTable("Kategoris");
                });

            modelBuilder.Entity("DukkanOnline.Models.SatinAlma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AliciId");

                    b.Property<string>("EnvanterId");

                    b.Property<int?>("EnvanterId1");

                    b.Property<string>("SepetId");

                    b.Property<int?>("SepetId1");

                    b.Property<string>("UrunId");

                    b.Property<int?>("UrunId1");

                    b.Property<string>("YorumcuId");

                    b.HasKey("Id");

                    b.HasIndex("AliciId");

                    b.HasIndex("EnvanterId1");

                    b.HasIndex("SepetId1");

                    b.HasIndex("UrunId1");

                    b.HasIndex("YorumcuId");

                    b.ToTable("SatinAlma");
                });

            modelBuilder.Entity("DukkanOnline.Models.Sepet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AliciId");

                    b.Property<string>("BakiciId");

                    b.Property<string>("EnvanterId");

                    b.Property<int?>("EnvanterId1");

                    b.Property<string>("UrunId");

                    b.Property<int?>("UrunId1");

                    b.Property<string>("YorumcuId");

                    b.HasKey("Id");

                    b.HasIndex("AliciId");

                    b.HasIndex("BakiciId");

                    b.HasIndex("EnvanterId1");

                    b.HasIndex("UrunId1");

                    b.HasIndex("YorumcuId");

                    b.ToTable("Sepet");
                });

            modelBuilder.Entity("DukkanOnline.Models.Urun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AliciId");

                    b.Property<string>("BakiciId");

                    b.Property<int>("KategoriId");

                    b.Property<string>("LongDescription");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.Property<string>("SaticiId");

                    b.Property<string>("ShortDescription");

                    b.Property<int>("Stok");

                    b.Property<string>("Title");

                    b.Property<string>("ToptanciId");

                    b.Property<string>("YorumcuId");

                    b.HasKey("Id");

                    b.HasIndex("AliciId");

                    b.HasIndex("BakiciId");

                    b.HasIndex("KategoriId");

                    b.HasIndex("SaticiId");

                    b.HasIndex("ToptanciId");

                    b.HasIndex("YorumcuId");

                    b.ToTable("Uruns");
                });

            modelBuilder.Entity("DukkanOnline.Models.Yorum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EnvanterId");

                    b.Property<int?>("EnvanterId1");

                    b.Property<int>("Puan");

                    b.Property<string>("SatinAlmaId");

                    b.Property<int?>("SatinAlmaId1");

                    b.Property<string>("SepetId");

                    b.Property<int?>("SepetId1");

                    b.Property<string>("UrunId");

                    b.Property<int?>("UrunId1");

                    b.Property<string>("YorumMetni")
                        .HasMaxLength(600);

                    b.Property<string>("YorumcuId");

                    b.HasKey("Id");

                    b.HasIndex("EnvanterId1");

                    b.HasIndex("SatinAlmaId1");

                    b.HasIndex("SepetId1");

                    b.HasIndex("UrunId1");

                    b.HasIndex("YorumcuId");

                    b.ToTable("Yorum");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("DukkanOnline.Models.Yorumcu", b =>
                {
                    b.HasBaseType("DukkanOnline.Models.ApplicationUser");

                    b.HasDiscriminator().HasValue("Yorumcu");
                });

            modelBuilder.Entity("DukkanOnline.Models.Alici", b =>
                {
                    b.HasBaseType("DukkanOnline.Models.Yorumcu");

                    b.HasDiscriminator().HasValue("Alici");
                });

            modelBuilder.Entity("DukkanOnline.Models.Bakici", b =>
                {
                    b.HasBaseType("DukkanOnline.Models.Alici");

                    b.HasDiscriminator().HasValue("Bakici");
                });

            modelBuilder.Entity("DukkanOnline.Models.Satici", b =>
                {
                    b.HasBaseType("DukkanOnline.Models.Bakici");

                    b.HasDiscriminator().HasValue("Satici");
                });

            modelBuilder.Entity("DukkanOnline.Models.Toptanci", b =>
                {
                    b.HasBaseType("DukkanOnline.Models.Satici");

                    b.Property<int>("Sicili");

                    b.HasDiscriminator().HasValue("Toptanci");
                });

            modelBuilder.Entity("DukkanOnline.Models.Envanter", b =>
                {
                    b.HasOne("DukkanOnline.Models.Alici", "Alici")
                        .WithMany()
                        .HasForeignKey("AliciId");

                    b.HasOne("DukkanOnline.Models.Bakici", "Bakici")
                        .WithMany()
                        .HasForeignKey("BakiciId");

                    b.HasOne("DukkanOnline.Models.Satici", "Satici")
                        .WithMany("Envanters")
                        .HasForeignKey("SaticiId");

                    b.HasOne("DukkanOnline.Models.Urun", "Urun")
                        .WithMany("Envanterler")
                        .HasForeignKey("UrunId1");

                    b.HasOne("DukkanOnline.Models.Yorumcu", "Yorumcu")
                        .WithMany()
                        .HasForeignKey("YorumcuId");
                });

            modelBuilder.Entity("DukkanOnline.Models.Kategori", b =>
                {
                    b.HasOne("DukkanOnline.Models.AltKategori", "AltKategori")
                        .WithMany()
                        .HasForeignKey("AltKategoriId");
                });

            modelBuilder.Entity("DukkanOnline.Models.SatinAlma", b =>
                {
                    b.HasOne("DukkanOnline.Models.Alici", "Alici")
                        .WithMany("SatinAlmas")
                        .HasForeignKey("AliciId");

                    b.HasOne("DukkanOnline.Models.Envanter", "Envanter")
                        .WithMany("SatinAlmas")
                        .HasForeignKey("EnvanterId1");

                    b.HasOne("DukkanOnline.Models.Sepet", "Sepet")
                        .WithMany("SatinAlmas")
                        .HasForeignKey("SepetId1");

                    b.HasOne("DukkanOnline.Models.Urun", "Urun")
                        .WithMany("SatinAlmas")
                        .HasForeignKey("UrunId1");

                    b.HasOne("DukkanOnline.Models.Yorumcu", "Yorumcu")
                        .WithMany()
                        .HasForeignKey("YorumcuId");
                });

            modelBuilder.Entity("DukkanOnline.Models.Sepet", b =>
                {
                    b.HasOne("DukkanOnline.Models.Alici", "Alici")
                        .WithMany()
                        .HasForeignKey("AliciId");

                    b.HasOne("DukkanOnline.Models.Bakici", "Bakici")
                        .WithMany("Sepets")
                        .HasForeignKey("BakiciId");

                    b.HasOne("DukkanOnline.Models.Envanter", "Envanter")
                        .WithMany("Sepets")
                        .HasForeignKey("EnvanterId1");

                    b.HasOne("DukkanOnline.Models.Urun", "Urun")
                        .WithMany("Sepets")
                        .HasForeignKey("UrunId1");

                    b.HasOne("DukkanOnline.Models.Yorumcu", "Yorumcu")
                        .WithMany()
                        .HasForeignKey("YorumcuId");
                });

            modelBuilder.Entity("DukkanOnline.Models.Urun", b =>
                {
                    b.HasOne("DukkanOnline.Models.Alici", "Alici")
                        .WithMany()
                        .HasForeignKey("AliciId");

                    b.HasOne("DukkanOnline.Models.Bakici", "Bakici")
                        .WithMany()
                        .HasForeignKey("BakiciId");

                    b.HasOne("DukkanOnline.Models.Kategori", "Kategori")
                        .WithMany("Uruns")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DukkanOnline.Models.Satici", "Satici")
                        .WithMany()
                        .HasForeignKey("SaticiId");

                    b.HasOne("DukkanOnline.Models.Toptanci", "Toptanci")
                        .WithMany("Uruns")
                        .HasForeignKey("ToptanciId");

                    b.HasOne("DukkanOnline.Models.Yorumcu", "Yorumcu")
                        .WithMany()
                        .HasForeignKey("YorumcuId");
                });

            modelBuilder.Entity("DukkanOnline.Models.Yorum", b =>
                {
                    b.HasOne("DukkanOnline.Models.Envanter", "Envanter")
                        .WithMany("Yorums")
                        .HasForeignKey("EnvanterId1");

                    b.HasOne("DukkanOnline.Models.SatinAlma", "SatinAlma")
                        .WithMany("Yorums")
                        .HasForeignKey("SatinAlmaId1");

                    b.HasOne("DukkanOnline.Models.Sepet", "Sepet")
                        .WithMany("Yorums")
                        .HasForeignKey("SepetId1");

                    b.HasOne("DukkanOnline.Models.Urun", "Urun")
                        .WithMany("Yorums")
                        .HasForeignKey("UrunId1");

                    b.HasOne("DukkanOnline.Models.Yorumcu", "Yorumcu")
                        .WithMany("Yorums")
                        .HasForeignKey("YorumcuId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("DukkanOnline.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("DukkanOnline.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DukkanOnline.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("DukkanOnline.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
